CSS (Chai aur code)

This is notes for css.

Css do two main things. :-
   1. Select Element           2. Style Element


There are 3 ways in which we can inject css in a Html page.
   
**Imp: Every Element has a global attribute that is "<stype></style>" which can be used within the element to style it. 

   1. Inline Styling :- In this styling in which we style within the Element 
                        This approach is opted by tailwind css in which style the element in inline way.

   2. In head of the page:- here in this type of styling we write the styling of the full page in the head portion in 
                             <style></style> element. Here we can select the element and then we can stype it usig css.

   3. In SEPERATE file:- Here we can put our css content in a different file and then eject that file in the webpage we wanted
                         We have to include that file in head part of the webpage.


               Ways to select the element:- There are usually two ways to slect the element
                                     Using :
                                     1. ID of the element you want to select.
                                     2. CLASS of the element you wnat to Select .
                                     3. also by name of the element( This approach fails when there are more than one element with same name)

               ****IMP :
                       ID can never be same for two elements where as CLASS can be same for the tow elements
                        and we can style two elements same using same class for them.
                           
 <!--Now this approach is using selecting the element where we are selecting the element h2 and p-->
    <style>   
          h2, p{
            color:aquamarine
          }
        #h2_second {               //ID's are selected by "#" sign.
            color: antiquewhite;
        }
        .same_class{               // Classes are selected by " . " sign.
            color: blue;
        }
    
    </style>

**Very Important : Speciacity rule : in which if we change color of p in file as brown and then we are changing it to red in a different file
                   What should our browser choose?
     -------
    |     it will always select the styling that is done within the document or wihin the element itself
    |     using style="" sttribute in the element.
    |

  *** Summary: 
   I can write my styling within inline, just like this.
   I can add the classes, I can target multiple elements, or
   I can write my styles into a separate file as well
   by adding just this link to the style sheet .
   So these are three ways how you can write your css  
   ------------------------------------------------------------------------------------------------------------------------------------------------

 Video 2:- Now lets start making a small project in css as we can only learn css with little little project in it.

 basic styling that we give to a webpage is :
 as browser give it's own margin and padding so we have to remove that and should give a height
 to our webpage.

 margin: 0;
 padding: 0;
 height: 300vh;   here we can also use px as300px then it will give 300 pixel now what happening is
                  it is taking vh (view port height) that mean it will adjust accourding to the size of 
                  the device it is opened on.

(That means if you're watching it on a
bigger screen, I want all the length.
If you're watching in the smaller screen, I'll just
calculate that height and I'll want all of it.
Hundred percent of the viewport height.
There are other options like 50 vh.
You can grab 50% of the viewport
height, but that is good enough.)


FLEX BOX: 
The Flexbox.
Flexbox is a display property which helps us to
move the elements much more faster and easier.

We can use flex box as:
            display: flex;
            justify-content:center;
            align-items: center;
            
            these 3 will align your content to center and align items to center also.

 Flexbox is applied to the parent of the elments .
 for example if we have a form in the div then form have some element then we can put flex on the form 
 and then use Flexbox properties on the child elements.           

 ------------------------------------------------------------------------------------------------------------------------------------------------
Video:  Masterclass on CSS selector.

Q: How to select the element?

    The most easy way is using class.


Pseudo elements:

::after {
  content: /* value (It is the value or Pseudo content that we will see on the website)*/;
  /* properties  : These are the properties FOR  the content of the pseudo element */
}

:before

In CSS, ::before creates a pseudo-element that is the first child of the selected element.
It is often used to add cosmetic content to an element with the content property. It is inline by default.

Example of the pseudo element : 
::after

HTML CODE:
<p class="boring-text">Here is some plain old boring text.</p>
<p>Here is some normal text that is neither boring nor exciting.</p>
<p class="exciting-text">Contributing to MDN is easy and fun.</p>

CSS CODE:
.exciting-text:hover::after {
  content: " <- EXCITING!";
  color: darkgreen;
  font-weight: bolder;
}

.boring-text:hover::after {
  content: " <- BORING";
  color: darkviolet;
  font-weight: bolder;
}
                                               Flexbox Flexbox Flexbox Flexbox Flexbox Flexbox
------------------------------------------------------------------------------------------------------------------------------------------------

The Flexbox has 2 acess :
  Main Access
  Other Access/ Alternate Access

  *****
     SO In the world of WEB the Main Access runs from LEFT to RIGHT 
     also a additional info : in the world of mobile application the main access of Flexbox runs from
    TOP to BOTTOM

Let me tell you, there are a couple
of other properties which starts with justify.
And this whole thing.
Justify actually runs on the main axis.
So it controls how your element are going to behave
From LEFT TO RIGHT


* To impliment the flex box we have to give the container element "display: flex;"
* Them after that we can use some properties 
* The first one is "flex direction" - The default direction of the flex box is "ROW" from "LEFT TO RIGHT" discussed above.
* Now to change this behaviour we use "flex direction: " property.  
  
   - Now in the code part 06_flexbox.html file 
   - the first box is default flex that is from left to right and is "row wise"

* Now in the 2. flex box is in which we try and use different type of direction we can give to flexbox.

* Now the 3rd one which on "Justify content: " which work on the mail access.
   - i.e how the elemts behave from left to right 


* Similarly the 4th flex box use  "Align item :" works on the alternative access that is "TOP TO BOTTOM"

-------------------------------------------------------------------------------------------------------------------------------

                            "GRID IN CSS"

                  All the theory in the code itself in the form of "COMMENTS":